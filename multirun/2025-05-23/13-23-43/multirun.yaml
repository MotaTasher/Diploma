hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - +cuda_id=1
    - df_config.end_block=21000000
    - train_batch_size=64
    - num_epochs=2000
    - model_params.time_features=21,45,69
  job:
    name: runner
    chdir: null
    override_dirname: +cuda_id=1,df_config.end_block=21000000,model_params.time_features=21,45,69,num_epochs=2000,train_batch_size=64
    id: ???
    num: ???
    config_name: config_eth_tensor_predict_small_bert_1m
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/motatasher/Documents/University/Diploma/Diploma
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/motatasher/Documents/University/Diploma/Diploma/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
name: model training on eth dataset v1, tensor predict, small bert
df_config:
  cnt: 50000
  start_block: 20900000
  end_block: 21000000
  use_async: false
dataset_fabric: GetEthereumDataset
train_batch_size: 64
test_batch_size: 64
sample_len: 100
cnt_known_address: 100
model: BertForTransactionRegressionV1
model_params:
  emb_size: 2
  num_attention_heads: 2
  use_compositor: false
  time_features: 45
  bert_config:
    vocab_size: 5000
    hidden_size: 128
    num_hidden_layers: 1
    intermediate_size: 512
    hidden_act: gelu
    hidden_dropout_prob: 0.1
    attention_probs_dropout_prob: 0.1
    max_position_embeddings: 128
    type_vocab_size: 2
    initializer_range: 0.02
    layer_norm_eps: 1.0e-12
    pad_token_id: 0
    position_embedding_type: absolute
    use_cache: true
num_epochs: 2000
learning_rate: 1.0e-05
gamma: 0.6
step_size: 5
warmup_epochs: 1
time_coef_loss: 1
cnt_last_for_show: 50
seconds_betwen_image_show: 10
model_predictor: time_cross_predictior
result_loss: result_loss_slower_change
show_img: false
show_batch_size: 100
p_change: 0.15
p_msk: 0.15
p_save: 0.15
loggin_each: 5
change_strategy: uniform
loss_fn: criterion
start_epoch: 0
use_log: true
use_exp: false
save_each: 50
save_path: models
scheduler: reduce_on_plateau
threshold: 0.05
cuda_id: 1
